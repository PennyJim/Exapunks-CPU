DATA 4 53 62 161
;  FUNCTION STACK OFFSET
;  REGISTER OFFSET
;  REAL STACK OFFSET
;  INSTRUCTION OFFSET
;  IOFFSET(161)+27-1 =
DATA 187
;  MEMORY-START OFFSET
;FSTACK ALLOCATION
	DATA 1 0 0 0 0 0 0 0 0 0
	DATA 0 0 0 0 0 0 0 0 0 0
	DATA 0 0 0 0 0 0 0 0 0 0
	DATA 0 0 0 0 0 0 0 0 0 0
	DATA 0 0 0 0 0 0 0 0 0 0
;REGISTERS
	DATA 1 0 0 0 0 0 0 0 0 0
;RSTACK ALLOCATION
	DATA 1 0 0 0 0 0 0 0 0 0
	DATA 0 0 0 0 0 0 0 0 0 0
	DATA 0 0 0 0 0 0 0 0 0 0
	DATA 0 0 0 0 0 0 0 0 0 0
	DATA 0 0 0 0 0 0 0 0 0 0
	DATA 0 0 0 0 0 0 0 0 0 0
	DATA 0 0 0 0 0 0 0 0 0 0
	DATA 0 0 0 0 0 0 0 0 0 0
	DATA 0 0 0 0 0 0 0 0 0 0
	DATA 0 0 0 0 0 0 0 0 0 0
;INSTRUCTIONS
	DATA 0 ;INSTS POINTER
	DATA 25 10 1 3 0 2 27 0
	DATA 0 8 1 1 31 7 0 27 1
	DATA 1 30 1 0 24 0 0 30
	DATA 8 0

;MEMORY START
DATA 1


MARK NEXT_INST
	SEEK -9999
	SEEK 3
	SEEK F
	COPY F T
	SEEK -1
	ADDI T 3 F
	SEEK T

MARK READ_INST_XX
	SWIZ F 2 T
	SEEK -1
	FJMP READ_INST_0X
	SUBI T 1 T
	FJMP READ_INST_1X
	SUBI T 1 T
	FJMP READ_INST_2X
	SUBI T 1 T
	FJMP READ_INST_3X
	JUMP READ_INST_4X

MARK READ_INST_0X
	SWIZ F 1 T
	FJMP NEXT_INST ;NOOP
	SUBI T 1 T
	FJMP INST_1
	SUBI T 1 T
	FJMP INST_2
	SUBI T 1 T
	FJMP INST_3
	SUBI T 1 T
	FJMP INST_4
	SUBI T 1 T
	FJMP INST_5
	SUBI T 1 T
	FJMP INST_6
	SUBI T 1 T
	FJMP INST_7
	SUBI T 1 T
	FJMP INST_8
	JUMP INST_9
MARK READ_INST_1X
	SWIZ F 1 T
	FJMP INST_10
	SUBI T 1 T
	FJMP INST_11
	SUBI T 1 T
	FJMP INST_12
	SUBI T 1 T
	FJMP INST_13
	SUBI T 1 T
	FJMP INST_14
	SUBI T 1 T
	FJMP INST_15
	SUBI T 1 T
	FJMP INST_16
	SUBI T 1 T
	FJMP INST_17
	SUBI T 1 T
	FJMP INST_18
	JUMP INST_19
MARK READ_INST_2X
	SWIZ F 1 T
	FJMP INST_20
	SUBI T 1 T
	FJMP INST_21
	SUBI T 1 T
	FJMP INST_22
	SUBI T 1 T
	FJMP INST_23
	SUBI T 1 T
	FJMP INST_24
	SUBI T 1 T
	FJMP INST_25
	SUBI T 1 T
	FJMP INST_26
	SUBI T 1 T
	FJMP INST_27
	SUBI T 1 T
	FJMP INST_28
	JUMP INST_29
MARK READ_INST_3X
	SWIZ F 1 T
	FJMP INST_30
	SUBI T 1 T
	FJMP INST_31
	SUBI T 1 T
	FJMP INST_32
	SUBI T 1 T
	FJMP INST_33
	SUBI T 1 T
	FJMP INST_34
	SUBI T 1 T
	FJMP INST_35
	SUBI T 1 T
	FJMP INST_36
	SUBI T 1 T
	FJMP INST_37
	SUBI T 1 T
	FJMP INST_38
	JUMP INST_39
MARK READ_INST_4X
	SWIZ F 1 T
	FJMP INST_40
	SUBI T 1 T
	FJMP INST_41
	SUBI T 1 T
	FJMP INST_42
	; SUBI T 1 T
	JUMP INST_43
	; SUBI T 1 T
	; FJMP INST_44
	; SUBI T 1 T
	; FJMP INST_45
	; SUBI T 1 T
	; FJMP INST_46
	; SUBI T 1 T
	; FJMP INST_47
	; SUBI T 1 T
	; FJMP INST_48
	; JUMP INST_49
;END INST SWITCH

;ADD #RES F
MARK INST_1
	ADDI X F X
JUMP NEXT_INST
;ADD #R #R
MARK INST_2
	VOID M
	COPY 0 M
	MARK INST_7_2  ;SUB
	MARK INST_13_2 ;MUL
	MARK INST_18_2 ;DIV
	COPY F X
	COPY F T
	; LOAD REG_T
		SEEK -9999
		SEEK 1
		SEEK F
		SEEK T
		COPY F T
		; RETURN LOAD
JUMP INST_2_3
;ADD #R F
MARK INST_3
	VOID M
	COPY 0 M
	MARK INST_8_3  ;SUB
	MARK INST_9_3  ;SUB
	MARK INST_14_3 ;MUL
	MARK INST_19_3 ;DIV
	MARK INST_20_3 ;DIV
	COPY F X
	COPY F T
	MARK INST_2_3
	MARK INST_4_3
	; LOAD REG_X
		SEEK -9999
		SEEK 1
		SEEK F
		SEEK X
		COPY F X
		; RETURN LOAD
JUMP SWITCH_MATH
;ADD #R #RES
MARK INST_4
	VOID M
	COPY 0 M
	MARK INST_10_4 ;SUB
	MARK INST_11_4 ;SUB
	MARK INST_15_4 ;MUL
	MARK INST_21_4 ;DIV
	MARK INST_22_4 ;DIV
	COPY X T
	COPY F X
JUMP INST_4_3


;SUB #RES F
MARK INST_5
	SUBI X F X
JUMP NEXT_INST
;SUB F #RES
MARK INST_6
	SUBI F X X
JUMP NEXT_INST
;SUB #R #R
MARK INST_7
	VOID M
	COPY 1 M
JUMP INST_7_2
;SUB #R F
MARK INST_8
	VOID M
	COPY 1 M
JUMP INST_8_3
;SUB F #R
MARK INST_9
	VOID M
	COPY 2 M
JUMP INST_9_3
;SUB #R #RES
MARK INST_10
	VOID M
	COPY 2 M
JUMP INST_10_4
;SUB #RES #R
MARK INST_11
	VOID M
	COPY 1 M
JUMP INST_11_4

;MULTIPLY #RES F
MARK INST_12
	MULI X F X
JUMP NEXT_INST
;MULTIPLY #R #R
MARK INST_13
	VOID M
	COPY 3 M
JUMP INST_13_2
;MULTIPLY #R F
MARK INST_14
	VOID M
	COPY 3 M
JUMP INST_14_3
;MULTIPLY #R #RES
MARK INST_15
	VOID M
	COPY 3 M
JUMP INST_15_4

;DIVIDE #RES F
MARK INST_16
	DIVI X F X
JUMP NEXT_INST
;DIVIDE F #RES
MARK INST_17
	DIVI F X X
JUMP NEXT_INST
;DIVIDE #R #R
MARK INST_18
	VOID M
	COPY 4 M
JUMP INST_18_2
;DIVIDE #R F
MARK INST_19
	VOID M
	COPY 4 M
JUMP INST_19_3
;DIVIDE F #R
MARK INST_20
	VOID M
	COPY 5 M
JUMP INST_20_3
;DIVIDE #R #RES
MARK INST_21
	VOID M
	COPY 5 M
JUMP INST_21_4
;DIVIDE #RES #R
MARK INST_22
	VOID M
	COPY 4 M
JUMP INST_22_4


MARK SWITCH_MATH
	SEEK -9999
	SEEK F
	COPY T F
	SEEK -1
	COPY M T
	FJMP SWITCH_ADDI
	SUBI T 1 T
	FJMP SWITCH_SUBI_1
	SUBI T 1 T
	FJMP SWITCH_SUBI_2
	SUBI T 1 T
	FJMP SWITCH_MULI
	SUBI T 1 T
	FJMP SWITCH_DIVI_1
	JUMP SWITCH_DIVI_2
MARK SWITCH_ADDI
	ADDI X F X
JUMP NEXT_INST
MARK SWITCH_SUBI_1
	SUBI X F X
JUMP NEXT_INST
MARK SWITCH_SUBI_2
	SUBI F X X
JUMP NEXT_INST
MARK SWITCH_MULI
	MULI X F X
JUMP NEXT_INST
MARK SWITCH_DIVI_1
	DIVI X F X
JUMP NEXT_INST
MARK SWITCH_DIVI_2
	DIVI F X X
JUMP NEXT_INST

;LOAD F #RES
MARK INST_23
	COPY F X
JUMP NEXT_INST
;LOAD #R #RES
MARK INST_24
	COPY F T
	SEEK -9999
	SEEK 1
	SEEK F
	SEEK T
	COPY F X
JUMP NEXT_INST
;LOAD F #R
MARK INST_25
	COPY F X
	MARK INST_27_25
	COPY F T
	MARK INST_26_25
	MARK INST_28_25
	SEEK -9999
	SEEK 1
	SEEK F
	SEEK T
	COPY X F
JUMP NEXT_INST
;LOAD #R #R
MARK INST_26
	COPY F X
	COPY F T
	SEEK -9999
	SEEK 1
	SEEK F
	SEEK X
	COPY F X
JUMP INST_26_25
;LOAD #RES #R
MARK INST_27
JUMP INST_27_25
;LOAD &F #R
MARK INST_28
	COPY F X
	COPY F T
	;GET FILE
	SEEK -9999
	SEEK 4
	SEEK X
	COPY F X
JUMP INST_28_25

;STORE #R &F
MARK INST_29
	COPY F X
	COPY F T
	;GET REGISTER
	SEEK -9999
	SEEK 1
	SEEK X
	COPY F X
	;SAVE TO FILE
	SEEK -9999
	SEEK 4
	SEEK T
	COPY X F
JUMP NEXT_INST

;JUMP !F
MARK INST_30
	MARK INST_31_30
	MARK INST_32_30
	MARK INST_33_30
	MARK INST_34_30
	MARK INST_35_30
	MARK INST_36_30
	MULI F 3 T
	SEEK -9999
	SEEK 3
	SEEK F
	COPY T F
JUMP NEXT_INST

;TODO: JUMPS IF #RES
;JUMP ZERO
MARK INST_31
	COPY X T
	FJMP INST_31_30
JUMP NEXT_INST
;JUMP NON-ZERO
MARK INST_32
	COPY X T
	TJMP INST_32_30
JUMP NEXT_INST
;JUMP GT-ZERO
MARK INST_33
	COPY X T
	TEST T > 0
	TJMP INST_33_30
JUMP NEXT_INST
;JUMP GTE-ZERO
MARK INST_34
	COPY X T
	TEST T > -1
	TJMP INST_34_30
JUMP NEXT_INST
;JUMP LT-ZERO
MARK INST_35
	COPY X T
	TEST T < 0
	TJMP INST_35_30
JUMP NEXT_INST
;JUMP LTE-ZERO
MARK INST_36
	COPY X T
	TEST T < 1
	TJMP INST_36_30
JUMP NEXT_INST

;FUNC !F
MARK INST_37
	MARK INST_38_37
	MARK INST_39_37
	MARK INST_40_37
	MARK INST_41_37
	MARK INST_42_37
	MARK INST_43_37
	MULI F 3 T
	;JUMP F_PUSH_X
		SEEK -9999
		SEEK F
		COPY X F
		SEEK -9999
		ADDI F 1 X
		SEEK -1
		COPY X F
  ;RETURN STACK
	SEEK 2;INSTS OFFSET
	SEEK F
	COPY F X
	SEEK -1
	COPY T F
	;JUMP F_POPU_TX
		SEEK -9999
		SEEK F
		COPY F T
		SEEK -1
		COPY X F
	;RETURN STACK
	COPY T X
JUMP NEXT_INST

;FUNC ZERO
MARK INST_38
	COPY X T
	FJMP INST_38_37
JUMP NEXT_INST
;FUNC NON-ZERO
MARK INST_39
	COPY X T
	TJMP INST_39_37
JUMP NEXT_INST
;FUNC GT-ZERO
MARK INST_40
	COPY X T
	TEST T > 0
	TJMP INST_40_37
JUMP NEXT_INST
;FUNC GTE-ZERO
MARK INST_41
	COPY X T
	TEST T > -1
	TJMP INST_41_37
JUMP NEXT_INST
;FUNC LT-ZERO
MARK INST_42
	COPY X T
	TEST T < 0
	TJMP INST_42_37
JUMP NEXT_INST
;FUNC LTE-ZERO
MARK INST_43
	COPY X T
	TEST T < 1
	TJMP INST_43_37
JUMP NEXT_INST

;RETURN
MARK INST_44
	;JUMP F_POP_T
		SEEK -9999
		SUBI F 1 T
		SEEK -1
		COPY T F
		SEEK T
		COPY F T
  ;RETURN STACK
	SEEK 2;INST OFFSET
	SEEK F
	COPY T F
JUMP NEXT_INST



; COPY TO USE
; NOT REAL FUNCTIONS
MARK F_PUSH_X
	SEEK -9999
	SEEK F
	COPY X F
	SEEK -9999
	ADDI F 1 X
	SEEK -1
	COPY X F
MARK F_POP_X
	SEEK -9999
	SUBI F 1 X
	SEEK -1
	COPY X F
	SEEK X
	COPY F X
MARK F_PUSH_T
	SEEK -9999
	SEEK F
	COPY T F
	SEEK -9999
	ADDI F 1 T
	SEEK -1
	COPY T F
MARK F_POP_T
	SEEK -9999
	SUBI F 1 T
	SEEK -1
	COPY T F
	SEEK T
	COPY F T
MARK R_PUSH_X
	SEEK -9999
	SEEK 2
	SEEK F
	COPY X F
	SEEK -9999
	SEEK 2
	ADDI F 1 X
	SEEK -1
	COPY X F
MARK R_POP_X
	SEEK -9999
	SEEK 2
	SUBI F 1 X
	SEEK -1
	COPY X F
	SEEK X
	COPY F X
MARK R_PUSH_T
	SEEK -9999
	SEEK 2
	SEEK F
	COPY T F
	SEEK -9999
	SEEK 2
	ADDI F 1 T
	SEEK -1
	COPY T F
MARK R_POP_T
	SEEK -9999
	SEEK 2
	SUBI F 1 T
	SEEK -1
	COPY T F
	SEEK T
	COPY F T
MARK LOAD_REG_X
	SEEK -9999
	SEEK 1
	SEEK F
	SEEK X
	COPY F X
MARK LOAD_REG_T
	SEEK -9999
	SEEK 1
	SEEK F
	SEEK T
	COPY F T